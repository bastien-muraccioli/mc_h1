name: CI for mc_h1

on:
  push:
    branches:
      - '**'
  pull_request:
    branches:
      - '**'
jobs:

  clang-format:
    runs-on: [self-hosted]
    steps:
      - name: Checkout repository code
        uses: actions/checkout@v3
      - name: Install clang-format-10
        run: |
          sudo apt-get -y -qq update
          sudo apt-get -y -qq install clang-format-10
      - name: Run clang-format-check
        run: |
          ./.clang-format-check.sh

  build-and-test:
    runs-on: [self-hosted]
    strategy:
      fail-fast: false
    steps:
      - name: Setup environment
        run: |
          echo "ROS_DISTRO=noetic" >> $GITHUB_ENV
          echo "PYTHON_PACKAGE_PREFIX=python3" >> $GITHUB_ENV
          mkdir -p ~/.ssh
          ssh-keyscan -t rsa github.com >> ~/.ssh/known_hosts
      - name: Install ROS
        run: |
          set -e
          set -x
          sudo sh -c 'echo "deb http://packages.ros.org/ros/ubuntu $(lsb_release -sc) main" > /etc/apt/sources.list.d/ros-latest.list'
          sudo apt-get install -y wget
          wget http://packages.ros.org/ros.key -O - | sudo apt-key add -
          sudo apt-get update -y -qq
          sudo apt-get install -y -qq ros-${ROS_DISTRO}-ros-base ${PYTHON_PACKAGE_PREFIX}-catkin-tools ${PYTHON_PACKAGE_PREFIX}-rosdep
      - name: Install mc_rtc
        run: |
          set -e
          set -x
          curl -1sLf 'https://dl.cloudsmith.io/public/mc-rtc/head/setup.deb.sh' | sudo -E bash
          sudo apt install -y -qq libmc-rtc-dev ros-${ROS_DISTRO}-mc-rtc-plugin
      - name: Setup catkin workspace
        run: |
          mkdir -p ${GITHUB_WORKSPACE}/catkin_ws/src/
          cd ${GITHUB_WORKSPACE}/catkin_ws
          set +x
          . /opt/ros/${ROS_DISTRO}/setup.bash
          set -x
          catkin init
          catkin build --limit-status-rate 0.1
      - name: Checkout h1_description
        run: |
          eval `ssh-agent -s`
          ssh-add - <<< '${{ secrets.DK_H1_DESCRIPTION }}'
          git clone --depth 1 git@github.com:isri-aist/h1_description catkin_ws/src/isri-aist/h1_description
      - name: Catkin build
        run: |
          set -e
          set -x
          cd ${GITHUB_WORKSPACE}/catkin_ws
          set +x
          . devel/setup.bash
          set -x
          catkin build
      - name: Checkout repository code
        uses: actions/checkout@v3
        with:
          submodules: recursive
          path: src/mc_h1
      - name: Build and test
        run: |
          set -e
          . ${GITHUB_WORKSPACE}/catkin_ws/devel/setup.bash
          set -x
          cd ${GITHUB_WORKSPACE}/src/mc_h1
          mkdir build
          cd build
          cmake .. -DCMAKE_BUILD_TYPE=RelWithDebInfo
          make
          sudo make install
          ctest -V
